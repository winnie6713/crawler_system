/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wuit.application.wins;

import java.awt.Dialog;
import java.awt.Font;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.table.DefaultTableModel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;

import wuit.common.crawler.composite.DSComposite;
import wuit.common.crawler.composite.DSExtractor;
import wuit.common.doc.xml.ParseWorkConfigXml;
import wuit.crawler.DSCrawlerParam;
import wuit.crawler.main.MainServer;

/**
 * 类描述:主程序入口
 * @author weiyunyun
 *
 */
public class AppMain extends javax.swing.JFrame {

    /**
	 * 
	 */
	private static final long serialVersionUID = -8235308550077365800L;

	/**
     * Creates new form AppMain
     */
    public AppMain() {
        initComponents();   
        jList1.setListData(listVals);
//        int w = (Toolkit.getDefaultToolkit().getScreenSize().width - width) / 2;
//        int h = (Toolkit.getDefaultToolkit().getScreenSize().height - height) / 2;
        this.setLocation(300,200);
        
//        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
//        Dimension frameSize = this.getSize();

        this.setTitle("互联网位置服务信息采集系统");
        
        InlitializeTree();
        jBtStop.setEnabled(false);
        jBtStart.setEnabled(true);
        
        
        jTabbedPane1.setTitleAt(0, "直接获取位置"); 
        String[] header = { "序号","标签","名称","区号","邮编","地址","省","地市","县区","路","号","镇","村","大楼","楼层","户号","参照","状态"}; //定义表头
        mode1 = new DefaultTableModel(header,0);
        mode1.setColumnCount(18);
        jTable2.setModel(mode1);
        jTable2.getTableHeader().setFont(new Font("Dialog", 0, 14));        
        
        mode2 = new DefaultTableModel(header,0);
        mode2.setColumnCount(18);
        
        jTabbedPane1.setTitleAt(1, "间接获取位置");
        jTable3.setModel(mode2);
        jTable3.getTableHeader().setFont(new Font("Dialog", 0, 14));  
        
        mode3 = new DefaultTableModel(header,0);
        mode3.setColumnCount(18);
        
        jTabbedPane1.setTitleAt(2, "歧义获取位置");
        jTable4.setModel(mode3);
        jTable4.getTableHeader().setFont(new Font("Dialog", 0, 14));  
        
        mode4 = new DefaultTableModel(header,0);
        mode4.setColumnCount(18);
        
        jTabbedPane1.setTitleAt(3, "信息完整"); 
        jTable5.setModel(mode4);
        jTable5.getTableHeader().setFont(new Font("Dialog", 0, 14));
        
        mode5 = new DefaultTableModel(header,0);
        mode5.setColumnCount(18);

        jTabbedPane1.setTitleAt(4, "基本完整"); 
        jTable6.setModel(mode5);
        jTable6.getTableHeader().setFont(new Font("Dialog", 0, 14));
        
        mode6 = new DefaultTableModel(header,0);
        mode6.setColumnCount(18);
        jTabbedPane1.setTitleAt(5, "信息冲突");
        jTable7.setModel(mode6);
        jTable7.getTableHeader().setFont(new Font("Dialog", 0, 14));        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jBtStart = new javax.swing.JButton();
        jBtStop = new javax.swing.JButton();
        jBtRefersh = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTFCrawlerMode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFCrawlerDeep = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTFCrawlerTasks = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTFActiveCrawler = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTxtUrlSum = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTxtUrls = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel24 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextExtractTasks = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTxtPageSum = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTxtPages = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jTxtItemSum = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextdirect = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTxtNull = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextAmb = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextItemInv = new javax.swing.JTextField();
        jPanel26 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jTextLocalSum = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextLocalValidate = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextLocalInvalidate = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLbState = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTFKeyUrl = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel27 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jProgressBar2 = new javax.swing.JProgressBar();
        jPanel28 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jProgressBar3 = new javax.swing.JProgressBar();
        jPanel29 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jProgressBar4 = new javax.swing.JProgressBar();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable7 = new javax.swing.JTable();
        jSplitPane2 = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jPanel23.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel23.setFont(new java.awt.Font("宋体", 1, 24)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("互联网位置服务信息");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jSplitPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(2);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        jPanel5.setLayout(new java.awt.GridLayout(6, 1));

        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.LINE_AXIS));

        jBtStart.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jBtStart.setText("启动");
        jBtStart.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jBtStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtStartActionPerformed(evt);
            }
        });
        jPanel17.add(jBtStart);

        jBtStop.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jBtStop.setText("停止");
        jBtStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtStopActionPerformed(evt);
            }
        });
        jPanel17.add(jBtStop);

        jBtRefersh.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jBtRefersh.setText("刷新");
        jBtRefersh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtRefershActionPerformed(evt);
            }
        });
        jPanel17.add(jBtRefersh);

        jPanel5.add(jPanel17);

        jPanel18.setLayout(new javax.swing.BoxLayout(jPanel18, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(" 搜索模式：");
        jPanel18.add(jLabel1);

        jTFCrawlerMode.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel18.add(jTFCrawlerMode);

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText(" 搜索深度：");
        jPanel18.add(jLabel3);

        jTFCrawlerDeep.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel18.add(jTFCrawlerDeep);

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText(" 搜索数：");
        jPanel18.add(jLabel4);

        jTFCrawlerTasks.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel18.add(jTFCrawlerTasks);

        jPanel5.add(jPanel18);

        jPanel19.setLayout(new javax.swing.BoxLayout(jPanel19, javax.swing.BoxLayout.LINE_AXIS));

        jLabel15.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel15.setText(" 活动搜索：");
        jPanel19.add(jLabel15);

        jTFActiveCrawler.setEditable(false);
        jPanel19.add(jTFActiveCrawler);

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(" 总链接数：");
        jPanel19.add(jLabel5);

        jTxtUrlSum.setEditable(false);
        jTxtUrlSum.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTxtUrlSum.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel19.add(jTxtUrlSum);

        jLabel6.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText(" 完成数：");
        jPanel19.add(jLabel6);

        jTxtUrls.setEditable(false);
        jTxtUrls.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTxtUrls.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel19.add(jTxtUrls);
        jPanel19.add(jLabel7);

        jPanel5.add(jPanel19);

        jPanel24.setLayout(new javax.swing.BoxLayout(jPanel24, javax.swing.BoxLayout.LINE_AXIS));

        jLabel10.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText(" 线 程 数：");
        jPanel24.add(jLabel10);

        jTextExtractTasks.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel24.add(jTextExtractTasks);

        jLabel13.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText(" 网页总数：");
        jPanel24.add(jLabel13);

        jTxtPageSum.setEditable(false);
        jTxtPageSum.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel24.add(jTxtPageSum);

        jLabel14.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText(" 完成数：");
        jPanel24.add(jLabel14);

        jTxtPages.setEditable(false);
        jTxtPages.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel24.add(jTxtPages);

        jPanel5.add(jPanel24);

        jPanel25.setLayout(new javax.swing.BoxLayout(jPanel25, javax.swing.BoxLayout.LINE_AXIS));

        jLabel16.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText(" 记录总数：");
        jPanel25.add(jLabel16);

        jTxtItemSum.setEditable(false);
        jTxtItemSum.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel25.add(jTxtItemSum);

        jLabel17.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText(" 直接 ");
        jPanel25.add(jLabel17);

        jTextdirect.setEditable(false);
        jTextdirect.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel25.add(jTextdirect);

        jLabel18.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText(" 间接 ");
        jPanel25.add(jLabel18);

        jTxtNull.setEditable(false);
        jTxtNull.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel25.add(jTxtNull);

        jLabel11.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel11.setText(" 歧义 ");
        jPanel25.add(jLabel11);

        jTextAmb.setEditable(false);
        jPanel25.add(jTextAmb);

        jLabel24.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel24.setText(" 无效 ");
        jPanel25.add(jLabel24);

        jTextItemInv.setEditable(false);
        jTextItemInv.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel25.add(jTextItemInv);

        jPanel5.add(jPanel25);

        jPanel26.setLayout(new javax.swing.BoxLayout(jPanel26, javax.swing.BoxLayout.LINE_AXIS));

        jLabel12.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel12.setText(" 总记录数：");
        jPanel26.add(jLabel12);

        jTextLocalSum.setEditable(false);
        jTextLocalSum.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel26.add(jTextLocalSum);

        jLabel21.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel21.setText(" 可用记录：");
        jLabel21.setToolTipText("");
        jPanel26.add(jLabel21);

        jTextLocalValidate.setEditable(false);
        jPanel26.add(jTextLocalValidate);

        jLabel9.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel9.setText(" 不可用数：");
        jPanel26.add(jLabel9);

        jTextLocalInvalidate.setEditable(false);
        jPanel26.add(jTextLocalInvalidate);

        jPanel5.add(jPanel26);

        jPanel3.add(jPanel5);

        jPanel6.setLayout(new java.awt.GridLayout(6, 1));

        jLbState.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLbState.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(jLbState, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addGap(141, 141, 141))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLbState, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
        );

        jPanel6.add(jPanel15);

        jPanel20.setLayout(new javax.swing.BoxLayout(jPanel20, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("  关键字/ 链接：");
        jPanel20.add(jLabel2);

        jTFKeyUrl.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jPanel20.add(jTFKeyUrl);

        jPanel6.add(jPanel20);

        jPanel21.setLayout(new javax.swing.BoxLayout(jPanel21, javax.swing.BoxLayout.LINE_AXIS));

        jLabel8.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel8.setText("  搜索网页进度：");
        jPanel21.add(jLabel8);
        jPanel21.add(jProgressBar1);

        jPanel6.add(jPanel21);

        jPanel27.setLayout(new javax.swing.BoxLayout(jPanel27, javax.swing.BoxLayout.LINE_AXIS));

        jLabel20.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("  网页处理进度：");
        jLabel20.setToolTipText("");
        jPanel27.add(jLabel20);
        jPanel27.add(jProgressBar2);

        jPanel6.add(jPanel27);

        jPanel28.setLayout(new javax.swing.BoxLayout(jPanel28, javax.swing.BoxLayout.LINE_AXIS));

        jLabel19.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("  位置解析进度：");
        jPanel28.add(jLabel19);
        jPanel28.add(jProgressBar3);

        jPanel6.add(jPanel28);

        jPanel29.setLayout(new javax.swing.BoxLayout(jPanel29, javax.swing.BoxLayout.LINE_AXIS));

        jLabel22.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jLabel22.setText("  位置可用比例：");
        jPanel29.add(jLabel22);
        jPanel29.add(jProgressBar4);

        jPanel6.add(jPanel29);

        jPanel3.add(jPanel6);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N

        jTable2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable2);

        jTabbedPane1.addTab("tab1", jScrollPane3);

        jTable3.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        jTabbedPane1.addTab("tab2", jScrollPane4);

        jTable4.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(jTable4);

        jTabbedPane1.addTab("tab3", jScrollPane5);

        jTable5.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable5);

        jTabbedPane1.addTab("tab4", jScrollPane6);

        jTable6.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(jTable6);

        jTabbedPane1.addTab("tab5", jScrollPane7);

        jTable7.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(jTable7);

        jTabbedPane1.addTab("tab6", jScrollPane8);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel2);

        jSplitPane2.setDividerLocation(200);
        jSplitPane2.setDividerSize(2);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setMinimumSize(new java.awt.Dimension(10, 10));
        jSplitPane2.setPreferredSize(new java.awt.Dimension(200, 475));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTree1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jTree1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTree1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        jSplitPane2.setTopComponent(jScrollPane1);

        jList1.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jSplitPane2.setRightComponent(jScrollPane2);

        jSplitPane1.setLeftComponent(jSplitPane2);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 849, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formComponentResized

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        String str=(String)this.jList1.getSelectedValue(); 
        int index = this.jList1.getSelectedIndex();
        
        if(  null != params && -1 != index){
            currJobIndex = index;
            DSExtractor extractor = params.get(index);  
            jTFCrawlerMode.setText(extractor.crawlerMode+"");
            if(extractor.crawlerMode == 1)
                jTFKeyUrl.setText(extractor.crawlerKeyWords+"");
            if(extractor.crawlerMode == 0)
                jTFKeyUrl.setText(extractor.CrawlerUrl+"");
            jTFCrawlerDeep.setText(extractor.crawlerDeepth+"");
            jTFCrawlerTasks.setText(extractor.task+"");
        }
    }//GEN-LAST:event_jList1MouseClicked

    /**/
    private void jBtStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtStartActionPerformed
        // TODO add your handling code here:
        MainCrawler crawler = new MainCrawler();
        new Thread(crawler).start();  
        server.running = 1;
        disp.state = 1;
        
        jBtStop.setEnabled(true);
        jBtStart.setEnabled(false); 
        
    }//GEN-LAST:event_jBtStartActionPerformed

    private void jBtRefershActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtRefershActionPerformed
        // TODO add your handling code here:
        Output query = new Output();
        new Thread(query).start();
    }//GEN-LAST:event_jBtRefershActionPerformed

    private void jBtStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtStopActionPerformed
        // TODO add your handling code here:
        disp.stopDisp();
        server.stopCrawling();
        jBtStop.setEnabled(false);
        jBtStart.setEnabled(true);        
    }//GEN-LAST:event_jBtStopActionPerformed

    private void jTree1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTree1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            System.out.println(jTree1.getSelectionPath());
            TreePath vals = jTree1.getSelectionPath();            
            System.out.println(vals.getLastPathComponent());
            String val = (String)vals.getLastPathComponent().toString();
            if(val.equals("地名查询")){
                AddressWords address = new AddressWords();
                address.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
                address.setVisible(true);
            }
            if(val.equals("网页特征库")){
//                pageFeature feature = new pageFeature();
            //    feature.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
//                feature.setVisible(true);
            }
        }
    }//GEN-LAST:event_jTree1MouseClicked

    private void loadAddressQuery(){        
        AddressWords address = new AddressWords();
        address.setModalExclusionType(Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        address.setVisible(true);
      /*  
      JFileChooser file = new JFileChooser (".");
      file.setAcceptAllFileFilterUsed(false);
      
      int result = file.showOpenDialog(null);  
      if(result == JFileChooser.APPROVE_OPTION){
          String path = file.getSelectedFile().getAbsolutePath();          
          config = new ParseWorkConfigXml();
          config.parseWorks(path);
          
         params = config.getWorksParams();
         for (int i=0;i<params.size();i++){
              listVals.add(params.get(i).title);
          }
          jList1.setListData(listVals);
      }
        */
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppMain().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtRefersh;
    private javax.swing.JButton jBtStart;
    private javax.swing.JButton jBtStop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLbState;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    private javax.swing.JProgressBar jProgressBar3;
    private javax.swing.JProgressBar jProgressBar4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextField jTFActiveCrawler;
    private javax.swing.JTextField jTFCrawlerDeep;
    private javax.swing.JTextField jTFCrawlerMode;
    private javax.swing.JTextField jTFCrawlerTasks;
    private javax.swing.JTextField jTFKeyUrl;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTable jTable7;
    private javax.swing.JTextField jTextAmb;
    private javax.swing.JTextField jTextExtractTasks;
    private javax.swing.JTextField jTextItemInv;
    private javax.swing.JTextField jTextLocalInvalidate;
    private javax.swing.JTextField jTextLocalSum;
    private javax.swing.JTextField jTextLocalValidate;
    private javax.swing.JTextField jTextdirect;
    private javax.swing.JTree jTree1;
    private javax.swing.JTextField jTxtItemSum;
    private javax.swing.JTextField jTxtNull;
    private javax.swing.JTextField jTxtPageSum;
    private javax.swing.JTextField jTxtPages;
    private javax.swing.JTextField jTxtUrlSum;
    private javax.swing.JTextField jTxtUrls;
    // End of variables declaration//GEN-END:variables

    private void InlitializeTree(){
        
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("互联网位置信息采集");
//        addSubNode(mdl.id,root,list);
        DefaultMutableTreeNode nodeSearchMode = new DefaultMutableTreeNode("搜索配置");
        nodeSearchMode.add(new DefaultMutableTreeNode("垂直搜索"));
        nodeSearchMode.add(new DefaultMutableTreeNode("关键字搜索"));
        nodeSearchMode.add(new DefaultMutableTreeNode("直接搜索"));
        
        DefaultMutableTreeNode nodeSearchAddress = new DefaultMutableTreeNode("地名查询");
        
        DefaultMutableTreeNode nodeSearchLib = new DefaultMutableTreeNode("特征模板库");
        nodeSearchLib.add(new DefaultMutableTreeNode("网页清理"));
        nodeSearchLib.add(new DefaultMutableTreeNode("默认提取"));
        nodeSearchLib.add(new DefaultMutableTreeNode("网页特征库"));
        
        root.add(nodeSearchMode);
        root.add(nodeSearchLib);
        root.add(nodeSearchAddress);
        TreeModel treeModel = new DefaultTreeModel(root);
        jTree1.setModel(treeModel);
        
    }
    
    private ParseWorkConfigXml config;
    private List<DSExtractor> params;
    private Vector<String> listVals = new Vector<String>();
    private int currJobIndex = -1;
    
    MainServer server ;
    
    private DispState disp = new DispState();
    DefaultTableModel mode1;
    DefaultTableModel mode2;
    DefaultTableModel mode3; 
    DefaultTableModel mode4; 
    DefaultTableModel mode5; 
    DefaultTableModel mode6; 
//    DefaultTableModel mode4; 
    
    class MainCrawler implements Runnable{
        public MainCrawler(){
            server = new MainServer();
            int extractors = 4;
            DSCrawlerParam paramCrawler = new DSCrawlerParam();
            paramCrawler.deepth = 2;
            paramCrawler.keyUrl = "http://www.aibang.com/shanghai/";
            paramCrawler.mapFilterUrl = null;
            paramCrawler.mode = 0;
            paramCrawler.tasks = 3;  
            
            server.Initialize(extractors, paramCrawler);
            server.start();            
        }
        
        public void run(){
            if (server == null)
                server =  new MainServer();
            new Thread(disp).start();
        }        
    }    
    
    class DispState implements Runnable{
        int state = 1;
        
        public synchronized void stopDisp(){
            state = 0;
        }
        
        public void run(){
            try {
                while(state == 1){
                    display();
                    Thread.sleep(5000);
                    if(server.running == 1){
                        jLbState.setText("正在运行中...");
                    }else{
                        jLbState.setText("停止运行...");
                    }
                }
                jLbState.setText("停止运行...");
            } catch (InterruptedException ex) {
                Logger.getLogger(CrawlersMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        public void display(){
            int sum = 0;
            synchronized(this){
            int size = MainServer.DBCrawler.listCrawlerUrls.size();
            
            for(int i=0;i<size;i++){
                int count = MainServer.DBCrawler.listCrawlerUrls.get(i).size();
                sum = sum + count;
            }
            
            jTable2.setModel(mode1);
            }
            /*
            synchronized(this){
                jProgressBar1.setMaximum(sum+MainServer.DBCrawler.mapDownload.size());
                jProgressBar1.setMinimum(1);
                jProgressBar1.setValue(MainServer.DBCrawler.mapDownload.size());
                jProgressBar1.setStringPainted(true);
                jProgressBar1.setPreferredSize(new Dimension(300, 20));
                jProgressBar1.setBorderPainted(true);
                jProgressBar1.setBackground(Color.pink);
                jProgressBar1.setVisible(true);
            }
            synchronized(this){
                jTFCrawlerTasks.setText(server.taskNum+"");
                jTxtUrlSum.setText(sum+MainServer.DBCrawler.mapDownload.size()+"");
                jTxtUrls.setText(MainServer.DBCrawler.mapDownload.size()+"");
                jTFActiveCrawler.setText(server.crawlerManager.getTaskCount()+"");

                jProgressBar2.setMaximum(MainServer.DBCrawler.listHtmlPages.size() + MainServer.state.pageExtractNum);
                jProgressBar2.setMinimum(1);
                jProgressBar2.setValue(MainServer.state.pageExtractNum);
                jProgressBar2.setStringPainted(true);
                jProgressBar2.setPreferredSize(new Dimension(300, 20));
                jProgressBar2.setBorderPainted(true);
                jProgressBar2.setBackground(Color.blue); 
                jProgressBar2.setVisible(true); 
                jTxtPageSum.setText(MainServer.DBCrawler.listHtmlPages.size() + MainServer.state.pageExtractNum+"");
                jTxtPages.setText(MainServer.state.pageExtractNum+"");
            }
            synchronized(this){
                
                jProgressBar3.setMaximum(MainServer.DBCrawler.listDSComposites.size()); 
                jProgressBar3.setMinimum(1);
                int parseSum = MainServer.DBCrawler.countParseDirect + MainServer.DBCrawler.countParseIndirect + MainServer.DBCrawler.countParseAmb + MainServer.DBCrawler.countItemsInv;
                jProgressBar3.setValue(parseSum );
                jProgressBar3.setStringPainted(true);
                jProgressBar3.setPreferredSize(new Dimension(300, 20));
                jProgressBar3.setBorderPainted(true);
                jProgressBar3.setBackground(Color.blue); 
                jProgressBar3.setVisible(true); 
                jTxtItemSum.setText(MainServer.DBCrawler.listDSComposites.size()+"");
                jTextdirect.setText(MainServer.DBCrawler.countParseDirect+""); 
                jTxtNull.setText(MainServer.DBCrawler.countParseIndirect+""); 
                jTextAmb.setText(MainServer.DBCrawler.countParseAmb+"");
                jTextItemInv.setText(MainServer.DBCrawler.countItemsInv + "");

                jTFKeyUrl.setText(server.paramCrawler.keyUrl);
                jTFCrawlerMode.setText(server.paramCrawler.mode+"");
                jTFCrawlerDeep.setText(server.paramCrawler.deepth +"");
                jTFCrawlerTasks.setText(server.crawlerManager.crawlerMaxTasks + "");

                jTextExtractTasks.setText(server.extractManager.taskNum+"");
            }
            synchronized(this){
                jTextLocalInvalidate.setText(MainServer.DBCrawler.countRsInvalidate+"");
                jTextLocalValidate.setText(MainServer.DBCrawler.countRsFull+"");
                jTextLocalSum.setText(MainServer.DBCrawler.countRsInvalidate+ MainServer.DBCrawler.countRsFull +"");
                jProgressBar4.setMaximum(MainServer.DBCrawler.countRsConflict+ MainServer.DBCrawler.countRsFull); 
                jProgressBar4.setMinimum(1);
                jProgressBar4.setValue(MainServer.DBCrawler.countRsFull);
                jProgressBar4.setStringPainted(true);
                jProgressBar4.setPreferredSize(new Dimension(300, 20));
                jProgressBar4.setBorderPainted(true);
                jProgressBar4.setBackground(Color.pink); 
                jProgressBar4.setVisible(true); 
            }
            */
            //Output query = new Output();
            //new Thread(query).start();
        }
    }
    
    class Output implements Runnable{
        public Output(){
        }
        
        public void run(){
            try {
                while(mode1.getRowCount()>0){
                    mode1.removeRow(0);
                }
                Thread.sleep(10);
                while(mode2.getRowCount()>0){
                    mode2.removeRow(0);
                }
                Thread.sleep(10);
                while(mode3.getRowCount()>0){
                    mode3.removeRow(0);
                }
                Thread.sleep(10);
                while(mode4.getRowCount()>0){
                    mode4.removeRow(0);
                }
                Thread.sleep(10);
                while(mode5.getRowCount()>0){
                    mode5.removeRow(0);
                }
                Thread.sleep(10);                
                int count = 1;
                dispInfo(MainServer.DBCrawler.listDSCompositesDrct,"listDSCompositesDrct",count,mode1);
                Thread.sleep(10);
                dispInfo(MainServer.DBCrawler.listDSCompositesDrct,"listDSCompositesNull",count,mode2);
                Thread.sleep(10);
                dispInfo(MainServer.DBCrawler.listDSCompositesDrct,"listDSCompositesAmb",count,mode3);
                Thread.sleep(10);
                dispInfo(MainServer.DBCrawler.listDSCompositesDrct,"listDSCompositesAmb",count,mode4);
                Thread.sleep(10);
                dispInfo(MainServer.DBCrawler.listDSCompositesDrct,"listDSCompositesAmb",count,mode5);
                Thread.sleep(10);            
            } catch (InterruptedException ex) {
                Logger.getLogger(CrawlersMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        private int dispInfo(List<DSComposite> list,String title,int count,DefaultTableModel mode){
            String[] vals ;
            for(int i=0;i<list.size();i++){
                vals = new String[18];
                vals[0] = count+"";
                count = count + 1;
                vals[1] = list.get(i).label;
                vals[2] = list.get(i).name;                
                vals[3] = list.get(i).phone_code;
                vals[4] = list.get(i).postcode;
                vals[5] = list.get(i).local.address;
                vals[6] = list.get(i).local.province;
                vals[7] = list.get(i).local.city;
                vals[8] = list.get(i).local.county;
                vals[9] = list.get(i).local.Road;
                vals[10] = list.get(i).local.RoadNo;
                vals[11] = list.get(i).local.township;
                vals[12] = list.get(i).local.village;
                vals[13] = list.get(i).local.building;
                vals[14] = list.get(i).local.floor;
                vals[15] = list.get(i).local.room;
                vals[16] = list.get(i).local.reference;
                vals[17] = list.get(i).local.flag+"";
                mode.addRow(vals);
            }
            return count;
        }
    }    
}

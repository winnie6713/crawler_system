/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package wuit.application.wins;

import java.awt.Font;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import wuit.crawler.database.PageFeatureInfo;
import wuit.crawler.database.PageFeaturesDB;

/**
 *
 * @author lxl
 */
public class WebFeatures extends javax.swing.JFrame {

    /**
     * Creates new form WebFeatures
     */
    public WebFeatures() {
        initComponents();
        this.setLocation(200,100);
        feature = new Feature(jTableFeature);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jButtonFeatureAdd1 = new javax.swing.JButton();
        jButtonFeatureDelete1 = new javax.swing.JButton();
        jButtonFeatureSave1 = new javax.swing.JButton();
        jButtonFeatureRollback1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFeature = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaFeature = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
        );

        jButtonFeatureAdd1.setText("添加");
        jButtonFeatureAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFeatureAdd1ActionPerformed(evt);
            }
        });

        jButtonFeatureDelete1.setText("删除");
        jButtonFeatureDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFeatureDelete1ActionPerformed(evt);
            }
        });

        jButtonFeatureSave1.setText("保存");
        jButtonFeatureSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFeatureSave1ActionPerformed(evt);
            }
        });

        jButtonFeatureRollback1.setText("刷新");
        jButtonFeatureRollback1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFeatureRollback1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButtonFeatureAdd1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFeatureDelete1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonFeatureSave1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonFeatureRollback1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButtonFeatureAdd1)
                .addComponent(jButtonFeatureDelete1)
                .addComponent(jButtonFeatureSave1)
                .addComponent(jButtonFeatureRollback1))
        );

        jTableFeature.setFont(new java.awt.Font("宋体", 0, 18)); // NOI18N
        jTableFeature.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableFeature.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableFeatureMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableFeature);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(jPanel2);

        jTextAreaFeature.setColumns(20);
        jTextAreaFeature.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextAreaFeature.setRows(5);
        jScrollPane2.setViewportView(jTextAreaFeature);

        jSplitPane1.setRightComponent(jScrollPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane1))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonFeatureAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFeatureAdd1ActionPerformed
        // TODO add your handling code here:
        feature.addnew();
    }//GEN-LAST:event_jButtonFeatureAdd1ActionPerformed

    private void jButtonFeatureDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFeatureDelete1ActionPerformed
        // TODO add your handling code here:
        if(feature.rowFeature<0)
            return;
        feature.delete( );
    }//GEN-LAST:event_jButtonFeatureDelete1ActionPerformed

    private void jButtonFeatureSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFeatureSave1ActionPerformed
        // TODO add your handling code here:
        feature.save();
    }//GEN-LAST:event_jButtonFeatureSave1ActionPerformed

    private void jButtonFeatureRollback1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFeatureRollback1ActionPerformed
        // TODO add your handling code here:
        feature.refresh();
    }//GEN-LAST:event_jButtonFeatureRollback1ActionPerformed

    private void jTableFeatureMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableFeatureMouseClicked
        // TODO add your handling code here:
        int selRow = jTableFeature.getSelectedRow();
//        if(feature.rowFeature>=0)
        feature.update();
        feature.rowFeature = selRow;
        feature.setFeature();
        
    }//GEN-LAST:event_jTableFeatureMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WebFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WebFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WebFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WebFeatures.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WebFeatures().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonFeatureAdd1;
    private javax.swing.JButton jButtonFeatureDelete1;
    private javax.swing.JButton jButtonFeatureRollback1;
    private javax.swing.JButton jButtonFeatureSave1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable jTableFeature;
    private javax.swing.JTextArea jTextAreaFeature;
    // End of variables declaration//GEN-END:variables

    Feature feature ;
    class Feature{
        public int rowFeature = -1;
        PageFeaturesDB db;
        List<PageFeatureInfo> rs;
        
        JTable _table = null;
        DefaultTableModel mode1 = null;        

        public Feature(JTable table){
            InitTable(table);
            //_table = table;
            db = new PageFeaturesDB();
            rs = new ArrayList<PageFeatureInfo>();
            db.SelectPageFeatures(rs);
            //feature = new FeatureTable(jTableFeature);
            display();
        }
        
        public void InitTable(JTable table){
            _table = table;
            _table.setRowHeight(24);
            if(_table == null)
                return;
            String[] header = { "序号","名称","模式"}; //定义表头
            mode1 = new DefaultTableModel(header,0){
                public boolean isCellEditable(int row, int column){
                    if(column==0)
                        return false;
                    else
                        return true;
                }
            };
            mode1.setColumnCount(3);
            _table.setModel(mode1);
            _table.getTableHeader().setFont(new Font("Dialog", 0, 14));         
            
            TableColumn Col0 = _table.getColumnModel().getColumn(0);
            Col0.setPreferredWidth(40);            
            Col0.setMaxWidth(40);

            TableColumn Col1 = _table.getColumnModel().getColumn(1);
            Col1.setPreferredWidth(100);            
            Col1.setMaxWidth(300);
            
            TableColumn Col2 = _table.getColumnModel().getColumn(2);
            Col2.setPreferredWidth(40);            
            Col2.setMaxWidth(80);            
        }        
        
        public void addnew(){
            int id = rs.get(rs.size()-1).id + 1;
            String[] row = {id + "","",0 + "",""};
            mode1.addRow(row);
            
            PageFeatureInfo info = new PageFeatureInfo();
            info.mode = 0;
            info.id = id;
            info.featrue = "";
            info.stat = 1;
            rs.add(info);
        }
        
        public void delete(){
            if(rowFeature<0)
                return;            
           int row = rowFeature;
           int i = 0;
           for(i = 0; i < rs.size();i ++){
               if(rs.get(i).stat == 3)
                   continue;
               row --;
               if(row < 0)
                   break;
           }
           row = i;            
            if(row<0)
                return;
            for(i = 0; i< rs.get(row).fields.size(); i++){
                if(rs.get(row).fields.get(i).stat == 1)
                    rs.get(row).fields.remove(i);
                else
                    rs.get(row).fields.get(i).stat = 3;
            }
            
            if(rs.get(row).stat == 1)
                rs.remove(row);
            else
                rs.get(row).stat = 3;
            display();
        }        
        
        private int getRsIndex(){
           if(rowFeature<0)
                return -1;
           int i = 0;
           int delRow = 0;
           while(i<=rowFeature + delRow){
               if(rs.get(i).stat == 3)
                   delRow++;
               i++;
           }
           return rowFeature + delRow; 
        }
        
        public void update(){
           int row = getRsIndex();
           if(row<0)
               return;
           
           String name = (String)mode1.getValueAt(row,1);
           int mode = Integer.parseInt((String)mode1.getValueAt(row,2));
           String feature = jTextAreaFeature.getText();
           
           String _name = rs.get(row).name;
           String _feature = rs.get(row).featrue;
           int _mode = rs.get(row).mode;
           
           if((_mode != mode || (_name != null && !_name.equals(name)) 
                   || (_feature != null && !_feature.equals(feature)))
                   && rs.get(row).stat == 0 ){
                rs.get(row).stat = 2;
            }
           
           rs.get(row).name = name;
           rs.get(row).featrue = feature;
           rs.get(row).mode = mode;           
        }
        
        public void display( ){
            if(_table == null || rs == null)
                return;
            while(mode1.getRowCount()>0){
                mode1.removeRow(0);
            }            
            
            int rowNum = 0;
            for(int i=0; i<rs.size();i++){
                if(rs.get(i).stat == 3)
                    continue;
                String[] row = {rowNum+"",rs.get(i).name,rs.get(i).mode+""};
                mode1.addRow(row);
                rowNum++;
            }
        }
        
        public void setFeature(){
           int row = getRsIndex();
           if(row<0)
               return;           
           jTextAreaFeature.setText(rs.get(row).featrue);
        }        
        
        public void refresh(){
            if(db == null)
                db = new PageFeaturesDB();
            if(rs == null)
                rs = new ArrayList<PageFeatureInfo>();
            else
                rs.clear();
            db.SelectPageFeatures(rs);
            display();
            rowFeature = -1;
        }
        
        public void save(){
            if(rowFeature>=0)
                update();
            for(int i=0; i<rs.size(); i++){
                PageFeatureInfo _feature = new PageFeatureInfo();                
                _feature.name = rs.get(i).name;
                _feature.featrue = rs.get(i).featrue;
                _feature.mode = rs.get(i).mode;
                _feature.id = rs.get(i).id;
//                _feature.fields = rs.get(i).fields;
                if(rs.get(i).stat == 1){                    
                    db.InsertFeature(_feature);
                    rs.get(i).stat = 0;
                    continue;
                }
                if(rs.get(i).stat == 2){
                    db.UpdateFeature(_feature);
                    rs.get(i).stat = 0;
                    continue;
                }
                if(rs.get(i).stat == 3){
                    db.DeleteFeature(_feature);
                    rs.remove(i);
                    continue;
                }
            }
        }
    }
}
